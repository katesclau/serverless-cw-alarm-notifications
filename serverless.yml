service: cw-alarm-notifications
frameworkVersion: "3"
useDotenv: true
plugins:
  - serverless-pseudo-parameters
  - serverless-plugin-aws-alerts


package:
  patterns:
    - "!node_modules/**"
    - "!config*"
    - "!yarn.lock"
    - "!package.json"
    - "!functions/**"
    - "!README.md"
    - "!scripts/**"
    - "!package-lock.json"
    - "!.esbuild"
    - "!layers"
    - "!resources"
    - "!.eslintrc.js"
    - "!__tests__"
    - "!_build"
    - "!resources"
    - "!scripts"
  
provider:
  name: aws
  runtime: nodejs16.x
  profile: serverless
  stage: ${opt:stage, 'dev'}
  region: us-west-2
  environment: 
    ACCOUNT_ID: ${env:ACCOUNT_ID, "#{AWS::AccountId}"}

custom:
  alerts:
    # stages: # Optionally - select which stages to deploy alarms to
    #   - production
    #   - staging
    dashboards: true
    nameTemplate: $[functionName]-$[metricName]-Alarm # Optionally - naming template for alarms, can be overwritten in definitions
    prefixTemplate: $[stackName] # Optionally - override the alarm name prefix

    topics:
      notify: 
        ok:
          topic: arn:aws:sns:${self:provider.region}:${self:provider.environment.ACCOUNT_ID}:alarm-topic-${self:provider.stage}
        alarm:
          topic: arn:aws:sns:${self:provider.region}:${self:provider.environment.ACCOUNT_ID}:alarm-topic-${self:provider.stage}
    # alarms:
    #   - functionThrottles
    #   - functionErrors
    #   - functionInvocations
    #   - functionDuration

functions:
  alarm-notifier:
    handler: functions/alarmNotifier.handler
    name: alarm-notifier-${self:provider.stage}
    timeout: 30
    package:
      individually: true
      patterns:
        - functions/alarmNotifier.js
    events:
      - sns: 
          arn: 
            Ref: AlarmTopic
          topicName: alarm-topic-${self:provider.stage}
  alarm-trigger:
    handler: functions/alarmTrigger.handler
    name: alarm-trigger-${self:provider.stage}
    timeout: 30
    package:
      individually: true
      patterns:
        - functions/alarmTrigger.js
    events: 
      - eventBridge:
        eventBus: default
        schedule: rate(5 minutes)
    alarms:
      - name: functionDuration
        namespace: 'AWS/Lambda'
        metric: Duration
        threshold: 5
        statistic: Maximum
        period: 60
        datapointsToAlarm: 1
        evaluationPeriods: 1
        comparisonOperator: GreaterThanOrEqualToThreshold
        treatMissingData: missing
        okActions:
          - notify
        alarmActions:
          - notify

resources:
  # SNS
  - ${file(./resources/sns/alarm-topic.yml)}